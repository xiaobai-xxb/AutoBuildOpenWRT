#=================================================
# Description: Build OpenWrt using GitHub Actions
# Author: xiaobai-xxb
#=================================================

name: AutoBuildOpenWRT_x86_64

on: 
  release:
    types: [published]

#  push:
#    branches: 
#      - master
      
#   schedule:
#    - cron: 0 8 * * 5
  
#   watch:
#    types: [started]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization Space
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        set +e
        docker rmi `docker images -q`
        sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php
        #sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php* || true
        #sudo -E apt-get update
        #sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget curl swig rsync
        #sudo -E apt-get -y autoremove --purge
        #sudo -E apt-get clean
        sudo apt update -y
        sudo apt full-upgrade -y
        sudo apt install -y ack antlr3 aria2 asciidoc autoconf automake autopoint binutils bison build-essential
        sudo apt install -y bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib
        sudo apt install -y git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev
        sudo apt install -y libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz
        sudo apt install -y mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip libpython3-dev qemu-utils
        sudo apt install -y rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev

    - name: Clone source code
      env: 
        REPO_URL: https://github.com/coolsnowwolf/lede
        REPO_BRANCH: master
      run: |
        git clone --depth 1 https://github.com/coolsnowwolf/lede -b master openwrt
        cd openwrt
        sed -i 's/#//' ./feeds.conf.default
#        echo "src-git ssrp https://github.com/fw876/helloworld.git" >> ./feeds.conf.default

    - name: Import external feeds - openclash
      working-directory: ./openwrt
      run: |
        git clone https://github.com/vernesong/OpenClash.git ../OpenClash
        cp -r ../OpenClash/luci-app-openclash package/luci-app-openclash

    - name: Update & Install Feeds
      working-directory: ./openwrt
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        ./scripts/feeds install -a 

    - name: Configuration Customization
      env:
        CONFIG_FILE: 'x86_64.config'
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        # Modify LAN ip
        sed -i 's/192.168.1.1/10.0.0.1/g' openwrt/package/base-files/files/bin/config_generate
        # Clear Password
        sed -i 's/$1$V4UetPzk$CYXluq4wUazHjmCDBCqXF.//g' openwrt/package/lean/default-settings/files/zzz-default-settings
        cd openwrt && make defconfig
        
    - name: Download Package
      working-directory: ./openwrt
      run: |
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Build Firmware
      working-directory: ./openwrt
      run: |
        echo -e "$(nproc) thread build."
        make -j$(nproc) V=s

    - name: Get current date
      id: date
      run: echo "::set-output name=today::$(date +'%Y-%m-%d')"

    - name : Upload Artifact
      uses: actions/upload-artifact@master
      with:
        name: OpenWrt${{ steps.date.outputs.today }}
        path: openwrt/bin
